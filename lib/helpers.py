utilities = [
    'bash',
    'bunzip2',
    'bzcat',
    'bzcmp',
    'bzdiff',
    'bzegrep',
    'bzexe',
    'bzfgrep',
    'bzgrep',
    'bzip2',
    'bzip2recover',
    'bzless',
    'bzmore',
    'cat',
    'chgrp',
    'chmod',
    'chown',
    'chvt',
    'cp',
    'dash',
    'date',
    'dd',
    'df',
    'dir',
    'dmesg',
    'echo',
    'ed',
    'egrep',
    'false',
    'fgrep',
    'fuser',
    'fusermount',
    'grep',
    'gunzip',
    'gzexe',
    'gzip',
    'hostname',
    'kill',
    'less',
    'lessecho',
    'lessfile',
    'lesskey',
    'lesspipe',
    'ln',
    'loadkeys',
    'login',
    'ls',
    'lsmod',
    'mkdir',
    'mknod',
    'mktemp',
    'more',
    'mount',
    'mountpoint',
    'mt',
    'mv',
    'nano',
    'nc',
    'netcat',
    'netstat',
    'nisdomainname',
    'open',
    'openvt',
    'pidof',
    'ping',
    'ping6',
    'plymouth',
    'ps',
    'pwd',
    'rbash',
    'readlink',
    'rm',
    'rmdir',
    'rnano',
    'sed',
    'setfont',
    'setupcon',
    'sh',
    'sleep',
    'stty',
    'su',
    'sync',
    'tailf',
    'tar',
    'tempfile',
    'touch',
    'true',
    'umount',
    'uname',
    'uncompress',
    'vdir',
    'which',
    'zcat',
    'zcmp',
    'zdiff',
    'zegrep',
    'zfgrep',
    'zforce',
    'zgrep',
    'zless',
    'zmore',
    'znew',
]

builtins = [
    'car',
    'cdr',
    'range',
]

# Dictionary of functions
FUNCTIONS = dict([ (_, _) for _ in utilities + builtins ])

""" Functions """
def read_source_file(path):
    if not os.path.exists(path):
        raise Exception('File "%s" does not exist.' % path)
    with open(path, 'r') as f:
        return f.read()
